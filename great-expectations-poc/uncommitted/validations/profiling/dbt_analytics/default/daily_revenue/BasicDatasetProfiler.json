{"results": [{"success": true, "result": {"observed_value": 4}, "expectation_config": {"expectation_type": "expect_table_row_count_to_be_between", "kwargs": {"min_value": 0, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": ["order_id", "user_id", "order_revenue_usd", "order_type", "load_date"]}, "expectation_config": {"expectation_type": "expect_table_columns_to_match_ordered_list", "kwargs": {"column_list": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": "INTEGER"}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_type_list", "kwargs": {"column": "order_id", "type_list": ["BIGINT", "BYTEINT", "DECIMAL", "INT", "INTEGER", "IntegerType", "LongType", "SMALLINT", "TINYINT", "int"], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 4, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_unique_value_count_to_be_between", "kwargs": {"column": "order_id", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 1.0, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_proportion_of_unique_values_to_be_between", "kwargs": {"column": "order_id", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "unexpected_count": 0.0, "unexpected_percent": 0.0, "partial_unexpected_list": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_be_null", "kwargs": {"column": "order_id", "mostly": 0.5, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 4.0, "unexpected_percent": 100.0, "unexpected_percent_nonmissing": 100.0, "partial_unexpected_list": [201912011, 201912012, 201912013, 201912014], "partial_unexpected_index_list": null, "partial_unexpected_counts": [{"value": 201912011, "count": 1}, {"value": 201912012, "count": 1}, {"value": 201912013, "count": 1}, {"value": 201912014, "count": 1}]}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_set", "kwargs": {"column": "order_id", "value_set": [], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "expectation_config": {"expectation_type": "expect_column_values_to_be_unique", "kwargs": {"column": "order_id", "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": true, "exception_message": "(pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (order_id IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (order_id IN (SELECT order_id \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY order_id \nHAVING count(order_id) > %(count_1)s) AND order_id IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)", "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/data_asset/data_asset.py\", line 223, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/dataset/sqlalchemy_dataset.py\", line 126, in inner_wrapper\n    count_results = dict(self.engine.execute(count_query).fetchone())\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 2182, in execute\n    return connection.execute(statement, *multiparams, **params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 982, in execute\n    return meth(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 287, in _execute_on_connection\n    return connection._execute_clauseelement(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1101, in _execute_clauseelement\n    distilled_params,\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1250, in _execute_context\n    e, statement, parameters, cursor, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1476, in _handle_dbapi_exception\n    util.raise_from_cause(sqlalchemy_exception, exc_info)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 398, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 152, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (order_id IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (order_id IN (SELECT order_id \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY order_id \nHAVING count(order_id) > %(count_1)s) AND order_id IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)\n"}}, {"success": true, "result": {"observed_value": "INTEGER"}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_type_list", "kwargs": {"column": "user_id", "type_list": ["BIGINT", "BYTEINT", "DECIMAL", "INT", "INTEGER", "IntegerType", "LongType", "SMALLINT", "TINYINT", "int"], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 4, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_unique_value_count_to_be_between", "kwargs": {"column": "user_id", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 1.0, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_proportion_of_unique_values_to_be_between", "kwargs": {"column": "user_id", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "unexpected_count": 0.0, "unexpected_percent": 0.0, "partial_unexpected_list": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_be_null", "kwargs": {"column": "user_id", "mostly": 0.5, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 4.0, "unexpected_percent": 100.0, "unexpected_percent_nonmissing": 100.0, "partial_unexpected_list": [1001, 1002, 1003, 1004], "partial_unexpected_index_list": null, "partial_unexpected_counts": [{"value": 1001, "count": 1}, {"value": 1002, "count": 1}, {"value": 1003, "count": 1}, {"value": 1004, "count": 1}]}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_set", "kwargs": {"column": "user_id", "value_set": [], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "expectation_config": {"expectation_type": "expect_column_values_to_be_unique", "kwargs": {"column": "user_id", "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": true, "exception_message": "(pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (user_id IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (user_id IN (SELECT user_id \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY user_id \nHAVING count(user_id) > %(count_1)s) AND user_id IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)", "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/data_asset/data_asset.py\", line 223, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/dataset/sqlalchemy_dataset.py\", line 126, in inner_wrapper\n    count_results = dict(self.engine.execute(count_query).fetchone())\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 2182, in execute\n    return connection.execute(statement, *multiparams, **params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 982, in execute\n    return meth(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 287, in _execute_on_connection\n    return connection._execute_clauseelement(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1101, in _execute_clauseelement\n    distilled_params,\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1250, in _execute_context\n    e, statement, parameters, cursor, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1476, in _handle_dbapi_exception\n    util.raise_from_cause(sqlalchemy_exception, exc_info)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 398, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 152, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (user_id IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (user_id IN (SELECT user_id \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY user_id \nHAVING count(user_id) > %(count_1)s) AND user_id IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)\n"}}, {"success": true, "result": {"observed_value": "INTEGER"}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_type_list", "kwargs": {"column": "order_revenue_usd", "type_list": ["BIGINT", "BYTEINT", "DECIMAL", "INT", "INTEGER", "IntegerType", "LongType", "SMALLINT", "TINYINT", "int"], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 4, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_unique_value_count_to_be_between", "kwargs": {"column": "order_revenue_usd", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 1.0, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_proportion_of_unique_values_to_be_between", "kwargs": {"column": "order_revenue_usd", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "unexpected_count": 0.0, "unexpected_percent": 0.0, "partial_unexpected_list": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_be_null", "kwargs": {"column": "order_revenue_usd", "mostly": 0.5, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 4.0, "unexpected_percent": 100.0, "unexpected_percent_nonmissing": 100.0, "partial_unexpected_list": [200, 250, 500, 0], "partial_unexpected_index_list": null, "partial_unexpected_counts": [{"value": 0, "count": 1}, {"value": 200, "count": 1}, {"value": 250, "count": 1}, {"value": 500, "count": 1}]}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_set", "kwargs": {"column": "order_revenue_usd", "value_set": [], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "expectation_config": {"expectation_type": "expect_column_values_to_be_unique", "kwargs": {"column": "order_revenue_usd", "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": true, "exception_message": "(pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (order_revenue_usd IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (order_revenue_usd IN (SELECT order_revenue_usd \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY order_revenue_usd \nHAVING count(order_revenue_usd) > %(count_1)s) AND order_revenue_usd IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)", "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/data_asset/data_asset.py\", line 223, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/great_expectations/dataset/sqlalchemy_dataset.py\", line 126, in inner_wrapper\n    count_results = dict(self.engine.execute(count_query).fetchone())\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 2182, in execute\n    return connection.execute(statement, *multiparams, **params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 982, in execute\n    return meth(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/sql/elements.py\", line 287, in _execute_on_connection\n    return connection._execute_clauseelement(self, multiparams, params)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1101, in _execute_clauseelement\n    distilled_params,\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1250, in _execute_context\n    e, statement, parameters, cursor, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1476, in _handle_dbapi_exception\n    util.raise_from_cause(sqlalchemy_exception, exc_info)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 398, in raise_from_cause\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/util/compat.py\", line 152, in reraise\n    raise value.with_traceback(tb)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/base.py\", line 1246, in _execute_context\n    cursor, statement, parameters, context\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/sqlalchemy/engine/default.py\", line 581, in do_execute\n    cursor.execute(statement, parameters)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 517, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 732, in _read_query_result\n    result.read()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 1075, in read\n    first_packet = self.connection._read_packet()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/connections.py\", line 684, in _read_packet\n    packet.check_error()\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/protocol.py\", line 220, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/Users/saurabh/.pyenv/versions/3.6.9/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\nsqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1137, \"Can't reopen table: 'ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e'\")\n[SQL: SELECT count(*) AS element_count, sum(CASE WHEN (order_revenue_usd IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS null_count, sum(CASE WHEN (order_revenue_usd IN (SELECT order_revenue_usd \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e GROUP BY order_revenue_usd \nHAVING count(order_revenue_usd) > %(count_1)s) AND order_revenue_usd IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS unexpected_count \nFROM ge_tmp_7dff21eb_60cc_4d8d_954d_59ffc60c455e]\n[parameters: {'param_1': 1, 'param_2': 0, 'count_1': 1, 'param_3': 1, 'param_4': 0}]\n(Background on this error at: http://sqlalche.me/e/2j85)\n"}}, {"success": true, "result": {"observed_value": "VARCHAR"}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_type_list", "kwargs": {"column": "order_type", "type_list": ["CHAR", "StringType", "TEXT", "VARCHAR", "str", "string"], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 3, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_unique_value_count_to_be_between", "kwargs": {"column": "order_type", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 0.75, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_proportion_of_unique_values_to_be_between", "kwargs": {"column": "order_type", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "unexpected_count": 0.0, "unexpected_percent": 0.0, "partial_unexpected_list": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_be_null", "kwargs": {"column": "order_type", "mostly": 0.5, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 4.0, "unexpected_percent": 100.0, "unexpected_percent_nonmissing": 100.0, "partial_unexpected_list": ["online", "online", "retail", "zzz_corrupt_value_zzz"], "partial_unexpected_index_list": null, "partial_unexpected_counts": [{"value": "online", "count": 2}, {"value": "retail", "count": 1}, {"value": "zzz_corrupt_value_zzz", "count": 1}]}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_set", "kwargs": {"column": "order_type", "value_set": [], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 0.0, "unexpected_percent": 0.0, "unexpected_percent_nonmissing": 0.0, "partial_unexpected_list": [], "partial_unexpected_index_list": null, "partial_unexpected_counts": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_match_regex", "kwargs": {"column": "order_type", "regex": "^\\s+|\\s+$", "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": "DATE"}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_type_list", "kwargs": {"column": "load_date", "type_list": ["DATE", "DATETIME", "DateType", "TIMESTAMP", "Timestamp", "TimestampType", "datetime64"], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 1, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_unique_value_count_to_be_between", "kwargs": {"column": "load_date", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": 0.25, "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_proportion_of_unique_values_to_be_between", "kwargs": {"column": "load_date", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"element_count": 4, "unexpected_count": 0.0, "unexpected_percent": 0.0, "partial_unexpected_list": []}, "expectation_config": {"expectation_type": "expect_column_values_to_not_be_null", "kwargs": {"column": "load_date", "mostly": 0.5, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": false, "result": {"element_count": 4, "missing_count": 0.0, "missing_percent": 0.0, "unexpected_count": 4.0, "unexpected_percent": 100.0, "unexpected_percent_nonmissing": 100.0, "partial_unexpected_list": ["2019-12-01", "2019-12-01", "2019-12-01", "2019-12-01"], "partial_unexpected_index_list": null, "partial_unexpected_counts": [{"value": "2019-12-01", "count": 4}]}, "expectation_config": {"expectation_type": "expect_column_values_to_be_in_set", "kwargs": {"column": "load_date", "value_set": [], "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": "2019-12-01", "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_min_to_be_between", "kwargs": {"column": "load_date", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}, {"success": true, "result": {"observed_value": "2019-12-01", "element_count": 4, "missing_count": 0, "missing_percent": 0.0}, "expectation_config": {"expectation_type": "expect_column_max_to_be_between", "kwargs": {"column": "load_date", "min_value": null, "max_value": null, "result_format": "SUMMARY"}, "meta": {"BasicDatasetProfiler": {"confidence": "very low"}}}, "exception_info": {"raised_exception": false, "exception_message": null, "exception_traceback": null}}], "success": false, "statistics": {"evaluated_expectations": 33, "successful_expectations": 25, "unsuccessful_expectations": 8, "success_percent": 75.75757575757575}, "meta": {"great_expectations.__version__": "0.8.6", "data_asset_name": "dbt_analytics/default/daily_revenue", "expectation_suite_name": "BasicDatasetProfiler", "run_id": "profiling", "batch_kwargs": {"table": "daily_revenue", "schema": "dbt_analytics", "limit": 1000}, "batch_id": {"timestamp": 1577576452.772352}}}